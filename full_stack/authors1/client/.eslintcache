[{"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/index.js":"1","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/reportWebVitals.js":"2","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/App.js":"3","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/Home.js":"4","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/components/AuthorList.js":"5","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/components/AuthorForm.js":"6","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/EditAuthor.js":"7","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/NewAuthor.js":"8"},{"size":500,"mtime":1611172289944,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611172289946,"results":"11","hashOfConfig":"10"},{"size":415,"mtime":1611193421128,"results":"12","hashOfConfig":"10"},{"size":943,"mtime":1611210885742,"results":"13","hashOfConfig":"10"},{"size":1626,"mtime":1611206976552,"results":"14","hashOfConfig":"10"},{"size":931,"mtime":1611210528864,"results":"15","hashOfConfig":"10"},{"size":1551,"mtime":1611278723289,"results":"16","hashOfConfig":"10"},{"size":942,"mtime":1611278728135,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gy7g83",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/index.js",[],["41","42"],"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/reportWebVitals.js",[],"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/App.js",[],"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/Home.js",["43","44"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport AuthorForm from '../components/AuthorForm';\nimport AuthorList from '../components/AuthorList';\n\nexport default () => {\n    const [authors, setAuthors] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/authors\")\n            .then(res => {\n                setAuthors(res.data);\n                setLoaded(true);\n                console.log(res.data);\n            })\n            .catch(err => console.log(\"Not working. Come back soon.\"))\n    }, []);\n\n    // function that takes in a current list of authors and when that function is called inthe authors list\n    const setAllAuthors = (filteredAuthors) => {\n        setAuthors(filteredAuthors)\n    }\n\n    return (\n        <>\n            {loaded && <AuthorList authors={authors} allAuthors={setAllAuthors} />}\n        </>\n    )\n}","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/components/AuthorList.js",["45","46","47"],"import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\n\nexport default props => {\n    const { authors, allAuthors } = props;\n\n    // ---- remove the author from the DOM (delete) ---- //\n    const removeFromDom = (id) => {\n        axios.delete(\"http://localhost:8000/api/authors/\" + id)\n            .then(deleted => allAuthors(\n                authors.filter(deleted => deleted._id !== id)\n            ))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <h1>Favorite Authors</h1>\n            <Link to=\"/new\">Add an author</Link>\n            <p style={{ color: \"purple\" }}>We have quotes by:</p>\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>Author</th>\n                        <th>Actions available</th>\n                    </tr>\n                </thead>\n\n                {authors.map((author, idx) => {\n                    return (\n\n                        <tbody key={idx}>\n                            <tr>\n                                <td >{author.name}</td>\n                                <td><Link to={`/edit/${author._id}`} className=\"btn btn-outline-primary btn-sm\"> Edit</Link>\n                                    <button className=\"btn btn-outline-danger btn-sm\" onClick={() => removeFromDom(author._id)}>Delete</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n\n            </table >\n        </div >\n    )\n}\n\n// add link to",["48","49"],"/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/components/AuthorForm.js",["50","51","52"],"import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nexport default props => {\n    const { form, initialName } = props;\n    const [name, setName] = useState(initialName);\n\n    const onSubmitHandler = e => {\n        e.preventDefault();\n        form({ name });\n    }\n\n    return (\n        <>\n            <h1>Favorite Authors</h1>\n            <Link to={\"/\"}>Home</Link>\n            <h4 style={{ color: \"purple\" }}>Add a new author:</h4>\n            <form onSubmit={onSubmitHandler} >\n                <p>\n                    <label>Name:</label>\n                    <input type=\"text\" onChange={e => setName(e.target.value)} value={name} />\n                </p>\n                <Link to={\"/\"} className=\"btn btn-outline-danger btn-sm\">Cancel</Link>\n                <button className=\"btn btn-outline-danger btn-sm\"> Submit</button>\n            </form>\n        </>\n    )\n}","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/EditAuthor.js",["53","54","55","56"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport AuthorForm from '../components/AuthorForm';\nimport { navigate } from '@reach/router';\n\nexport default (props) => {\n    const { id, } = props;\n    const [errors, setErrors] = useState([]);\n    const [author, setAuthor] = useState({});\n    const [authorExists, setAuthorExists] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    ;\n    // prefilling the form with object for edit page\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/authors/\" + id)\n            .then(response => {\n                setAuthor(response.data);\n                setLoaded(true);\n                if (response.data.name != undefined) {\n                    setAuthorExists(true);\n                }\n            })\n    }, [])\n\n    const editAuthor = formData => {\n        axios.put('http://localhost:8000/api/authors/' + id, formData)\n            .then(res => { navigate('/') })\n            .catch(err => {\n                console.log(err);\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for (const key of Object.keys(errorResponse)) {\n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            })\n    }\n\n    return (\n        <>\n            { errors ? errors.map((err, index) => <p key={index}>{err}</p>) : \"\"}\n            { loaded && < AuthorForm initialName={author.name} form={editAuthor} />}\n        </>\n    )\n\n}","/Users/nicholaslee/Desktop/codingDojo/MERN/full_stack/authors1/client/src/views/NewAuthor.js",["57","58"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport AuthorForm from '../components/AuthorForm';\nimport { navigate } from '@reach/router';\n\nexport default () => {\n    const [errors, setErrors] = useState([]);\n\n    const createAuthor = formData => {\n        axios.post('http://localhost:8000/api/new', formData)\n            .then(res => { navigate('/') })\n            .catch(err => {\n                console.log(err);\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for (const key of Object.keys(errorResponse)) {\n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            })\n    }\n\n    return (\n        <>\n            { errors ? errors.map((err, index) => <p key={index}>{err}</p>) : \"\"}\n            < AuthorForm initialName=\"\" form={createAuthor} />\n        </>\n    )\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":6,"column":1,"nodeType":"69","endLine":30,"endColumn":2},{"ruleId":"63","severity":1,"message":"70","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"71","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"68","line":5,"column":1,"nodeType":"69","endLine":47,"endColumn":2},{"ruleId":"59","replacedBy":"72"},{"ruleId":"61","replacedBy":"73"},{"ruleId":"63","severity":1,"message":"74","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":24},{"ruleId":"63","severity":1,"message":"75","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":5,"column":1,"nodeType":"69","endLine":29,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":6,"column":1,"nodeType":"69","endLine":46,"endColumn":2},{"ruleId":"63","severity":1,"message":"76","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":19,"column":40,"nodeType":"79","messageId":"80","endLine":19,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":23,"column":8,"nodeType":"83","endLine":23,"endColumn":10,"suggestions":"84"},{"ruleId":"63","severity":1,"message":"71","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":6,"column":1,"nodeType":"69","endLine":29,"endColumn":2},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'AuthorForm' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.",["85"],["86"],"'navigate' is defined but never used.","'axios' is defined but never used.","'authorExists' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},[817,819],"[id]"]